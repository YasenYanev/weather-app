{"version":3,"file":"984.bundle.js","mappings":"wGAAeA,eAAeC,EAAcC,EAASC,EAAMC,GACzD,MAAMC,QAAaH,GAQrB,SAA+BG,EAAMD,GACnCA,EAAcE,SAAS,GAAGC,YAAc,GAAGF,EAAKG,SAASC,SAASJ,EAAKG,SAASE,UAChFN,EAAcE,SAAS,GAAGC,YAAc,GAAGF,EAAKM,QAAQC,cAC1D,CATEC,CAAsBR,EAAMD,EAAcE,SAAS,IAWrD,SAA8BD,EAAMD,EAAeD,GACjD,MAAMQ,EAAUN,EAAKM,QACfG,EAAYH,EAAQG,UACpBC,EAAuB,MAATZ,EAAeQ,EAAQK,OAASL,EAAQM,OACtDC,EACK,MAATf,EAAeQ,EAAQQ,YAAcR,EAAQS,YACzCd,EAAWF,EAAcE,SAAS,GAAGA,SAE3CA,EAAS,GAAGe,IAAMP,EAAUQ,KAC5BhB,EAAS,GAAGC,YAAc,GAAGQ,KAAeZ,EAAKoB,gBACjDjB,EAAS,GAAGA,SAAS,GAAGC,YAAcO,EAAUU,KAChDlB,EAAS,GAAGA,SAAS,GAAGC,YAAc,cAAcW,KAAiBf,EAAKoB,eAC5E,CAtBEE,CAAqBpB,EAAMD,EAAcE,SAAS,GAAIH,GAwBxD,SAAqCE,EAAMD,EAAeD,GACxD,MAAMQ,EAAUN,EAAKM,QACfe,EAAgB,MAATvB,EAAeQ,EAAQgB,SAAWhB,EAAQiB,SACjDC,EAAsB,MAAT1B,EAAeQ,EAAQmB,OAASnB,EAAQoB,UACrDC,EAAkB,IAAI5B,EAAcE,SAAS,GAAGA,SAAS,GAAGA,UAC5D2B,EAAkB,CACtBP,EACAf,EAAQuB,SACRvB,EAAQwB,GACRN,EACAlB,EAAQyB,MACR/B,EAAKgC,SAASC,YAAY,GAAGC,IAAIC,qBACjCnC,EAAKgC,SAASC,YAAY,GAAGG,MAAMC,QACnCrC,EAAKgC,SAASC,YAAY,GAAGG,MAAME,OACnCtC,EAAKgC,SAASC,YAAY,GAAGG,MAAMG,YAGrCZ,EAAgBa,SAAQC,IACtBA,EAAOxC,SAAS,GAAGC,YACjB0B,EAAgBD,EAAgBe,QAAQD,GAAQ,GAEtD,CA5CEE,CAA4B3C,EAAMD,EAAcE,SAAS,GAAIH,GA8C/D,SAA8BE,EAAMD,EAAeD,GACjD,MAAM8C,EAAe,IAAI7C,EAAcE,SAAS,GAAGA,UACnD2C,EAAaJ,SAAQN,IACnB,MAAMW,EACJ7C,EAAKgC,SAASC,YAAYW,EAAaF,QAAQR,GAAO,GAClDY,EACK,MAAThD,EACI+C,EAAkBX,IAAIa,UACtBF,EAAkBX,IAAIc,UACtBC,EACK,MAATnD,EACI+C,EAAkBX,IAAIgB,UACtBL,EAAkBX,IAAIiB,UACtBC,EACFP,EAAkBX,IAAImB,YAE1BnB,EAAIoB,UAAY,2CAEWT,EAAkBU,+CAChBT,KAAehD,EAAKoB,8DACd+B,KAAWnD,EAAKoB,8DAChBkC,oBAC9B,GAET,CArEEI,CAAqBxD,EAAMD,EAAcE,SAAS,GAAIH,EACxD,C","sources":["webpack://weather-app/./src/modules/render-data.js"],"sourcesContent":["export default async function renderWeather(fetchFn, unit, targetElement) {\r\n  const data = await fetchFn;\r\n\r\n  renderCurrentLocation(data, targetElement.children[0]);\r\n  renderCurrentWeather(data, targetElement.children[1], unit);\r\n  renderCurrentWeatherDetails(data, targetElement.children[1], unit);\r\n  renderWeeklyForecast(data, targetElement.children[2], unit);\r\n}\r\n\r\nfunction renderCurrentLocation(data, targetElement) {\r\n  targetElement.children[0].textContent = `${data.location.name}, ${data.location.country}`;\r\n  targetElement.children[1].textContent = `${data.current.last_updated}`;\r\n}\r\n\r\nfunction renderCurrentWeather(data, targetElement, unit) {\r\n  const current = data.current;\r\n  const condition = current.condition;\r\n  const temperature = unit === 'c' ? current.temp_c : current.temp_f;\r\n  const feelsLikeTemp =\r\n    unit === 'c' ? current.feelslike_c : current.feelslike_f;\r\n  const children = targetElement.children[0].children;\r\n\r\n  children[0].src = condition.icon;\r\n  children[1].textContent = `${temperature}째${unit.toUpperCase()}`;\r\n  children[2].children[0].textContent = condition.text;\r\n  children[2].children[1].textContent = `Feels like ${feelsLikeTemp}째${unit.toUpperCase()}`;\r\n}\r\n\r\nfunction renderCurrentWeatherDetails(data, targetElement, unit) {\r\n  const current = data.current;\r\n  const wind = unit === 'c' ? current.gust_kph : current.gust_mph;\r\n  const visibility = unit === 'c' ? current.vis_km : current.vis_miles;\r\n  const detailsElements = [...targetElement.children[1].children[0].children];\r\n  const detailsFromData = [\r\n    wind, // Wind\r\n    current.humidity, // Humidity\r\n    current.uv, // UV index\r\n    visibility, // Visibility\r\n    current.cloud, // Cloudiness\r\n    data.forecast.forecastday[0].day.daily_chance_of_rain, // Chance of rain\r\n    data.forecast.forecastday[0].astro.sunrise, // Sunrise\r\n    data.forecast.forecastday[0].astro.sunset, // Sunset\r\n    data.forecast.forecastday[0].astro.moon_phase, // Moon phase\r\n  ];\r\n\r\n  detailsElements.forEach(detail => {\r\n    detail.children[1].textContent =\r\n      detailsFromData[detailsElements.indexOf(detail)]; // Fix wind m/s mph\r\n  });\r\n}\r\n\r\nfunction renderWeeklyForecast(data, targetElement, unit) {\r\n  const daysElements = [...targetElement.children[1].children];\r\n  daysElements.forEach(day => {\r\n    const dayObjectFromData =\r\n      data.forecast.forecastday[daysElements.indexOf(day) + 1];\r\n    const avarageTemp =\r\n      unit === 'c'\r\n        ? dayObjectFromData.day.avgtemp_c\r\n        : dayObjectFromData.day.avgtemp_f;\r\n    const minTemp =\r\n      unit === 'c'\r\n        ? dayObjectFromData.day.mintemp_c\r\n        : dayObjectFromData.day.mintemp_f;\r\n    const maxWind = 'c'\r\n      ? dayObjectFromData.day.maxwind_kph\r\n      : dayObjectFromData.day.mintemp_mph;\r\n    day.innerHTML = `\r\n    <p>\r\n      <span class=\"day-name\">${dayObjectFromData.date}</span>\r\n      <span class=\"daily-temp\">${avarageTemp}째${unit.toUpperCase()}</span>\r\n      <span class=\"daily-night-temp\">${minTemp}째${unit.toUpperCase()}</span>\r\n      <span class=\"daily-wind-speed\">${maxWind}</span>\r\n    </p>`;\r\n  });\r\n}\r\n"],"names":["async","renderWeather","fetchFn","unit","targetElement","data","children","textContent","location","name","country","current","last_updated","renderCurrentLocation","condition","temperature","temp_c","temp_f","feelsLikeTemp","feelslike_c","feelslike_f","src","icon","toUpperCase","text","renderCurrentWeather","wind","gust_kph","gust_mph","visibility","vis_km","vis_miles","detailsElements","detailsFromData","humidity","uv","cloud","forecast","forecastday","day","daily_chance_of_rain","astro","sunrise","sunset","moon_phase","forEach","detail","indexOf","renderCurrentWeatherDetails","daysElements","dayObjectFromData","avarageTemp","avgtemp_c","avgtemp_f","minTemp","mintemp_c","mintemp_f","maxWind","maxwind_kph","innerHTML","date","renderWeeklyForecast"],"sourceRoot":""}